{"version":3,"sources":["main/counseling.png","logo.svg","board/app1.js","board/boardreple.js","board/deleteBoard.js","board/boardMete2.js","board/boardMete.js","board/boardwrite.js","board/boardMain.js","login/login.js","sign/sign.js","ifram/ifram.js","message/allview.js","message/allview2.js","message/message.js","main/main.js","socket1.js","socket2.js","App.js","serviceWorker.js","index.js","board/like.png"],"names":["module","exports","BoardItem","Component","handleRemove","props","row","onRemove","brdno","handleSelectRow","onSelectRow","this","onClick","brdtitle","brdwriter","brddate","toLocaleDateString","React","BoardForm","state","setState","handleChange","e","target","name","value","handleSubmit","preventDefault","onSaveData","url","width","height","id","className","display","position","Boardreple","fetchFunction","console","log","list","data","number","fetch","method","headers","body","JSON","stringify","then","res","json","undefined","alert","i","length","concat","nick","time","reple","recomend","replq_q","componentDidUpdate","prevProps","prevState","submintTF","selectTagNum","clickLick","localStorage","getItem","plus","content","map","key","src","like","split","line","Transition","forwardRef","ref","Slide","direction","AlertDialogSlide","onDelete","box","inputpw","rownumber","selectmenuFetch","changeContentOn","onChange","handleClickOpen","open","accept","document","getElementById","handleClose","style","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","TextField","label","variant","placeholder","type","DialogActions","Button","color","BoardMete2","componentDidMount","like_","repleSubmit","today","Date","year","getFullYear","month","getMonth","date","getDate","hours","getHours","minutes","getMinutes","timestring","writer","clickLikeB","quentity","reple_q","title","clickmenu","rows","marginTop","marginRight","cursor","marginBottom","columns","minWidth","align","format","toLocaleString","Board","makeStyles","root","container","maxHeight","contentOn","handleChangePage","event","newPage","page","handleChangeRowsPerPage","rowsPerPage","test","rowclick","window","scrollTo","borderTop","Paper","TableContainer","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","backgroundColor","TableBody","slice","index","hover","role","tabIndex","TablePagination","rowsPerPageOptions","component","count","onChangePage","onChangeRowsPerPage","Boardwrite","user_nick","onSubmit","userid","boardon","visit","multiline","BoardMain","writeon","Login","login","loginOn","pw","boolean","setItem","button_name","button_backColor","idinput","pwinput","checkPW","pw2","pwcheck","info_input","checkID","tf","idcheck","checkNICK","niccheck","goSign","user_info","location","href","Allview","nickname","message","Allview2","socket","io","onchage","sendClick","emit","messages","newrow","on","Main","menuOnmouse0","menuSelect","Ldisplay","Sdisplay","Idisplay","Cdisplay","Lcolor","Scolor","Icolor","ccolor","menuOnmouse1","menuOnmouse2","menuOnmouse3","kinds","selectmenu","iframOn","clickIfram","clickifram","counseling","marginLeft","onMouseOver","Socket1","onclick","Socket2","massage","App","exact","path","Boolean","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.c7f60d66.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/counseling.f6a94eea.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React, { Component } from \"react\";\r\nimport WebView from \"react-electron-web-view\";\r\nimport Iframe from \"react-iframe\";\r\n\r\nclass App1 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.child = React.createRef();\r\n  }\r\n\r\n  state = {\r\n    maxNo: 3,\r\n\r\n    boards: [\r\n      {\r\n        brdno: 1,\r\n        brdwriter: \"Lee SunSin\",\r\n        brdtitle: \"If you intend to live then you die\",\r\n        brddate: new Date(),\r\n      },\r\n      {\r\n        brdno: 2,\r\n        brdwriter: \"So SiNo\",\r\n        brdtitle: \"Founder for two countries\",\r\n        brddate: new Date(),\r\n      },\r\n    ],\r\n  };\r\n\r\n  handleSaveData = (data) => {\r\n    let boards = this.state.boards;\r\n    if (data.brdno === null || data.brdno === \"\" || data.brdno === undefined) {\r\n      // new : Insert\r\n      this.setState({\r\n        maxNo: this.state.maxNo + 1,\r\n        boards: boards.concat({\r\n          brdno: this.state.maxNo,\r\n          brddate: new Date(),\r\n          brdwriter: data.brdwriter,\r\n          brdtitle: data.brdtitle,\r\n        }),\r\n      });\r\n    } else {\r\n      // Update\r\n      this.setState({\r\n        boards: boards.map((row) =>\r\n          data.brdno === row.brdno ? { ...data } : row\r\n        ),\r\n      });\r\n    }\r\n  };\r\n\r\n  handleRemove = (brdno) => {\r\n    this.setState({\r\n      boards: this.state.boards.filter((row) => row.brdno !== brdno),\r\n    });\r\n  };\r\n\r\n  handleSelectRow = (row) => {\r\n    this.child.current.handleSelectRow(row);\r\n  };\r\n\r\n  render() {\r\n    const { boards } = this.state;\r\n    return (\r\n      <div>\r\n        <BoardForm onSaveData={this.handleSaveData} ref={this.child} />\r\n\r\n        <table border=\"1\">\r\n          <tbody>\r\n            <tr align=\"center\">\r\n              <td width=\"50\">No.</td> <td width=\"300\">Title</td>\r\n              <td width=\"100\">Name</td> <td width=\"100\">Date</td>\r\n            </tr>\r\n\r\n            {boards.map((row) => (\r\n              <BoardItem\r\n                key={row.brdno}\r\n                row={row}\r\n                onRemove={this.handleRemove}\r\n                onSelectRow={this.handleSelectRow}\r\n              />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass BoardItem extends React.Component {\r\n  handleRemove = () => {\r\n    const { row, onRemove } = this.props;\r\n    onRemove(row.brdno);\r\n  };\r\n\r\n  handleSelectRow = () => {\r\n    const { row, onSelectRow } = this.props;\r\n    onSelectRow(row);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <tr>\r\n        <td>{this.props.row.brdno}</td>\r\n        <td>\r\n          <a onClick={this.handleSelectRow}>{this.props.row.brdtitle}</a>\r\n        </td>\r\n        <td>{this.props.row.brdwriter}</td>\r\n        <td>{this.props.row.brddate.toLocaleDateString(\"ko-KR\")}</td>\r\n        <td>\r\n          <button onClick={this.handleRemove}>X</button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n// const WebView = require(\"react-electron-web-view\");\r\n\r\nclass BoardForm extends Component {\r\n  state = {\r\n    brdwriter: \"\",\r\n    brdtitle: \"\",\r\n  };\r\n  handleSelectRow = (row) => {\r\n    this.setState(row);\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSaveData(this.state);\r\n    this.setState({ brdno: \"\", brdwriter: \"\", brdtitle: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      // <form onSubmit={this.handleSubmit}>\r\n      //   {\" \"}\r\n      //   <input\r\n      //     placeholder=\"title\"\r\n      //     name=\"brdtitle\"\r\n      //     value={this.state.brdtitle}\r\n      //     onChange={this.handleChange}\r\n      //   />{\" \"}\r\n      //   <input\r\n      //     placeholder=\"name\"\r\n      //     name=\"brdwriter\"\r\n      //     value={this.state.brdwriter}\r\n      //     onChange={this.handleChange}\r\n      //   />{\" \"}\r\n      //   <button type=\"submit\">Save</button>{\" \"}\r\n      // </form>\r\n      <Iframe\r\n        url=\"https://www.cnet.co.kr/\"\r\n        width=\"450px\"\r\n        height=\"450px\"\r\n        id=\"myId\"\r\n        className=\"myClassname\"\r\n        display=\"initial\"\r\n        position=\"relative\"\r\n      />\r\n      // <WebView src=\"https://www.google.com\" />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App1;\r\n","import React, { Component } from \"react\";\r\nimport \"./boardreple.css\";\r\nimport like from \"./like.png\";\r\n\r\n// let list = [];\r\n\r\nfunction createData(number, nick, time, reple, recomend) {\r\n  return { number, nick, time, reple, recomend };\r\n}\r\n\r\nclass Boardreple extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: [],\r\n    };\r\n  }\r\n\r\n  fetchFunction = () => {\r\n    console.log(\"hiihi\");\r\n    this.setState(\r\n      {\r\n        list: [],\r\n      },\r\n      () => {\r\n        let data = {\r\n          number: this.props.number,\r\n        };\r\n        // console.log(\"hihi\");\r\n        fetch(\"/api/repDownload\", {\r\n          method: \"post\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(data),\r\n        })\r\n          .then((res) => res.json())\r\n          .then((json) => {\r\n            console.log(\"================================================\");\r\n            if (json === undefined) {\r\n              alert(\"오류\");\r\n            } else {\r\n              for (let i = 0; i < json.length; i++) {\r\n                this.setState(\r\n                  {\r\n                    list: this.state.list.concat(createData(json[i].number, json[i].nick, json[i].time, json[i].reple, json[i].recomend)),\r\n                  },\r\n                  () => {\r\n                    this.props.replq_q(json.length);\r\n                  }\r\n                );\r\n              }\r\n              console.log(json);\r\n            }\r\n          });\r\n      }\r\n    );\r\n  };\r\n\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    if (this.props.number !== prevProps.number || this.props.submintTF !== prevProps.submintTF) {\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          selectTagNum: -1,\r\n        },\r\n        () => {\r\n          this.fetchFunction();\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  // clickLick = (number, recomend) => {\r\n  //   if (localStorage.getItem(\"userid\") === \"\") {\r\n  //     alert(\"로그인 해주세요\");\r\n  //   } else {\r\n  //     // console.log(number + \"||\" + recomend + \"||||||||||||||||||||||\");\r\n  //     let plus = recomend + 1;\r\n  //     console.log(number + \"========\" + plus);\r\n\r\n  //     let data = {\r\n  //       number: number,\r\n  //       recomend: plus,\r\n  //     };\r\n\r\n  //     fetch(\"http://localhost:3001/updateLike\", {\r\n  //       method: \"post\",\r\n  //       headers: { \"Content-Type\": \"application/json\" },\r\n  //       body: JSON.stringify(data),\r\n  //     }).then();\r\n  //   }\r\n  // };\r\n\r\n  clickLick = (number, recomend) => {\r\n    if (localStorage.getItem(\"userid\") === \"\") {\r\n      alert(\"로그인 해주세요\");\r\n    } else {\r\n      // console.log(number + \"||\" + recomend + \"||||||||||||||||||||||\");\r\n      let plus = recomend + 1;\r\n      console.log(number + \"========\" + plus);\r\n\r\n      let data = {\r\n        number: number,\r\n        recomend: plus,\r\n      };\r\n\r\n      fetch(\"/api/updateLike\", {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(data),\r\n      }).then(this.fetchFunction());\r\n    }\r\n  };\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    const content = this.state.list.map((list) => (\r\n      <div className=\"rep_box\" key={list.number}>\r\n        <div className=\"rep_title\">\r\n          <div className=\"rep_WTbox\">\r\n            <div className=\"rep_writer\">{list.nick}</div>\r\n            <div className=\"rep_time\"> {list.time}</div>\r\n          </div>\r\n          <div className=\"rep_buttonbox\">\r\n            <img src={like} width=\"12\" height=\"12\" className=\"rep_rexobtn\" />\r\n            <div\r\n              className=\"rep_reco\"\r\n              onClick={() => {\r\n                this.clickLick(list.number, list.recomend);\r\n              }}\r\n            >\r\n              좋아요: {list.recomend}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"rep_reple\">{list.reple}</div> */}\r\n        <div className=\"rep_reple\">\r\n          {list.reple.split(\"\\n\").map((line) => {\r\n            return (\r\n              <span>\r\n                {line}\r\n                <br />\r\n              </span>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    ));\r\n\r\n    return <div>{content}</div>;\r\n  }\r\n}\r\n\r\nexport default Boardreple;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport \"./boardMete.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nclass AlertDialogSlide extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      inputpw: \"\",\r\n    };\r\n  }\r\n\r\n  onDelete = (e) => {\r\n    // e.preventDefault();\r\n    const box = {\r\n      inputpw: this.state.inputpw, //입력 패스워드\r\n      rownumber: this.props.data.number, //선택게시물넘버\r\n    };\r\n    fetch(\"/api/deletePw\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(box),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        if (json === false) {\r\n          alert(\"비밀번호가 틀렸어요\"); //비밀번호 틀림\r\n        } else {\r\n          alert(\"게시물이 삭제 되었습니다\");\r\n          fetch(\"/api/deleteBoard\", {\r\n            method: \"post\",\r\n            headers: {\r\n              \"content-type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(box),\r\n          })\r\n            .then((res) => res.json())\r\n            .then((json) => {\r\n              this.props.selectmenuFetch();\r\n              this.props.changeContentOn();\r\n            });\r\n        }\r\n      });\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    console.log(this.state.inputpw);\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    if (localStorage.getItem(\"userid\") === \"\") {\r\n      alert(\"로그인 해주세요\");\r\n    } else {\r\n      this.setState({\r\n        open: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  accept = () => {\r\n    // alert(\"확인누름\");\r\n    this.setState(\r\n      {\r\n        open: false,\r\n      },\r\n      () => {\r\n        this.onDelete();\r\n        document.getElementById(\"qq\").value = \"\";\r\n      }\r\n    );\r\n    // console.log(this.props.data);\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button\r\n          // variant=\"outlined\"\r\n          // color=\"primary\"\r\n          onClick={this.handleClickOpen}\r\n          className=\"mete_deletebutton\"\r\n          style={{}}\r\n        >\r\n          삭제\r\n        </button>\r\n        <Dialog open={this.state.open} TransitionComponent={Transition} keepMounted onClose={this.handleClose} aria-labelledby=\"alert-dialog-slide-title\" aria-describedby=\"alert-dialog-slide-description\">\r\n          <DialogTitle id=\"alert-dialog-slide-title\">{\"삭제하시려면 비밀번호를 입력하세요\"}</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              //   className=\"write_title_\"\r\n              id=\"qq\"\r\n              label=\"비밀번호 입력\"\r\n              variant=\"outlined\"\r\n              name=\"inputpw\"\r\n              placeholder=\"\"\r\n              type=\"password\"\r\n              onChange={this.onChange}\r\n            />\r\n            {/* <DialogContentText id=\"alert-dialog-slide-description\">\r\n              Let Google help apps determine location. This means sending\r\n              anonymous location data to Google, even when no apps are running.\r\n            </DialogContentText> */}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              취소\r\n            </Button>\r\n            <Button onClick={this.accept} color=\"primary\">\r\n              확인\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AlertDialogSlide;\r\n","import React, { Component } from \"react\";\r\nimport App1 from \"./app1\";\r\nimport Boardreple from \"./boardreple\";\r\nimport like from \"./like.png\";\r\nimport DeleteBoard from \"./deleteBoard\";\r\n\r\nclass BoardMete2 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      reple: \"\",\r\n      id: localStorage.getItem(\"userid\"),\r\n      writer: localStorage.getItem(\"usernick\"),\r\n      number: \"\",\r\n      submintTF: true,\r\n      like_: 0,\r\n      reple_q: 0,\r\n    };\r\n  }\r\n  componentDidMount = () => {};\r\n\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    if (this.props.data.recomend !== prevProps.data.recomend) {\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          selectTagNum: -1,\r\n          like_: this.props.data.recomend,\r\n          // number: this.props.number,\r\n        },\r\n        () => {\r\n          // console.log(this.state.number + \"000\");\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value, // 변화가 있을때마다 state값을 초기화\r\n    });\r\n    console.log(this.state.reple);\r\n  };\r\n\r\n  repleSubmit = () => {\r\n    if (localStorage.getItem(\"userid\") === \"\") {\r\n      alert(\"로그인 해주세요\");\r\n    } else {\r\n      let today = new Date();\r\n      let time = {\r\n        year: today.getFullYear(),\r\n        month: today.getMonth() + 1,\r\n        date: today.getDate(),\r\n        hours: today.getHours(),\r\n        minutes: today.getMinutes(),\r\n      };\r\n      let timestring = `${time.year}/${time.month}/${time.date} ${time.hours}:${time.minutes}`;\r\n\r\n      let data = {\r\n        reple: this.state.reple,\r\n        writer: this.state.writer,\r\n        time: timestring,\r\n        id: this.state.id,\r\n        number: this.props.number,\r\n      };\r\n\r\n      console.log(data);\r\n      if (this.state.submintTF === true) {\r\n        this.setState(\r\n          {\r\n            submintTF: false,\r\n          },\r\n          () => {\r\n            fetch(\"/api/repUpload\", {\r\n              //서버의 Singo라우터를 찾아간다\r\n              method: \"post\",\r\n              headers: { \"Content-Type\": \"application/json\" },\r\n              body: JSON.stringify(data), // json화 해버리기\r\n            }).then((document.getElementById(\"mTxtArea\").value = \"\"));\r\n          }\r\n        );\r\n      } else {\r\n        this.setState(\r\n          {\r\n            submintTF: true,\r\n          },\r\n          () => {\r\n            fetch(\"/api/repUpload\", {\r\n              method: \"post\",\r\n              headers: { \"Content-Type\": \"application/json\" },\r\n              body: JSON.stringify(data),\r\n            }).then((document.getElementById(\"mTxtArea\").value = \"\"));\r\n          }\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  clickLikeB = () => {\r\n    if (localStorage.getItem(\"userid\") === \"\") {\r\n      alert(\"로그인 해주세요\");\r\n    } else {\r\n      let plus = this.props.data.recomend + 1;\r\n      console.log(this.props.data.number + \"========\" + plus);\r\n\r\n      let data = {\r\n        number: this.props.data.number,\r\n        recomend: plus,\r\n      };\r\n\r\n      fetch(\"/api/updateLikeB\", {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(data),\r\n      }).then(\r\n        this.setState({\r\n          like_: plus,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  replq_q = (quentity) => {\r\n    this.setState({\r\n      reple_q: quentity,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Mete_board\">\r\n        <div className=\"mete_titlebox\">\r\n          <div className=\"mete_Btitle\">\r\n            {this.props.data.title}\r\n            {/* <button className=\"mete_deletebutton\">삭제</button> */}\r\n            <DeleteBoard data={this.props.data} selectmenuFetch={this.props.selectmenuFetch} clickmenu={this.props.clickmenu} rows={this.props.rows} changeContentOn={this.props.changeContentOn} />\r\n          </div>\r\n          <div className=\"mete_Bwtbox\">\r\n            <div className=\"mete_Bwtbox2\">\r\n              <div className=\"mete_Bwriter\"> {this.props.data.writer}</div>\r\n              <div className=\"mete_Btime\">{this.props.data.time}</div>\r\n            </div>\r\n            {/* <button className=\"mete_recomendButn\">\r\n              추천: {this.props.data.recomend}\r\n            </button> */}\r\n\r\n            <div className=\"mete_lickbox\">\r\n              <img src={like} width=\"12\" height=\"12\" style={{ marginTop: 3, marginRight: 3 }} />\r\n              <div style={{ marginRight: 15, cursor: \"pointer\" }} onClick={this.clickLikeB}>\r\n                좋아요: {this.state.like_}\r\n                {/* 좋아요: {this.props.data.recomend} */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"mete_content\">\r\n          {this.props.data.content.split(\"\\n\").map((line) => {\r\n            return (\r\n              <span>\r\n                {line}\r\n                <br />\r\n              </span>\r\n            );\r\n          })}\r\n\r\n          {/* {this.props.data.content} */}\r\n        </div>\r\n        <div className=\"mete_replebox\">\r\n          <div className=\"mete_textareabox\">\r\n            <div className=\"mete_repletitle\">\r\n              <span>댓글쓰기</span>\r\n              <span style={{ marginRight: \"80px\" }}>댓글 수 : {this.state.reple_q}</span>\r\n            </div>\r\n            <div className=\"mete_textareabox2\">\r\n              <textarea className=\"mete_textarea\" name=\"reple\" placeholder=\"최대 200자까지 가능해요\" onChange={this.onChange} id=\"mTxtArea\"></textarea>\r\n              <button className=\"mete_replebtn\" onClick={this.repleSubmit}>\r\n                등록\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"mete_line\"></div>\r\n        <div style={{ marginBottom: 30 }}>\r\n          <Boardreple clickmenu={this.state.clickmenu} number={this.props.number} submintTF={this.state.submintTF} replq_q={this.replq_q} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoardMete2;\r\n","import React, { useEffect } from \"react\";\r\nimport { Component } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n// import $ from \"jquery\";\r\n// import jQuery from \"jquery\";\r\nimport \"./boardMete.css\";\r\nimport BoardMete2 from \"./boardMete2\";\r\n\r\nconst columns = [\r\n  { id: \"number\", label: \"번호\", minWidth: 70 },\r\n  { id: \"title\", label: \"제목\", minWidth: 100 },\r\n  {\r\n    id: \"writer\",\r\n    label: \"글쓴이\",\r\n    minWidth: 70,\r\n    align: \"right\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"date\",\r\n    label: \"등록일\",\r\n    minWidth: 70,\r\n    align: \"right\",\r\n    format: (value) => value.toLocaleString(\"en-US\"),\r\n  },\r\n  {\r\n    id: \"recomend\",\r\n    label: \"추천수\",\r\n    minWidth: 70,\r\n    align: \"right\",\r\n    // format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\n// function createData(number, title, writer, date, recomend) {\r\n//   //   const density = population / size;\r\n//   return { number, title, writer, date, recomend };\r\n// }\r\n\r\n// let rows = [];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"98%\",\r\n  },\r\n  container: {\r\n    maxHeight: 800,\r\n  },\r\n});\r\n\r\nexport default class Board extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      page: 0,\r\n      rowsPerPage: 12,\r\n      content: \"\",\r\n      id: \"\",\r\n      number: 0,\r\n      recomend: 0,\r\n      time: \"\",\r\n      title: \"\",\r\n      writer: \"\",\r\n      contentOn: \"none\",\r\n      clickmenu: this.props.clickmenu,\r\n    };\r\n  }\r\n\r\n  changeContentOn = () => {\r\n    this.setState({\r\n      contentOn: \"none\",\r\n    });\r\n  };\r\n  //  const classes = useStyles();\r\n\r\n  //   const [page, setPage] = React.useState(0);\r\n  //   const [rowsPerPage, setRowsPerPage] = React.useState(12);\r\n\r\n  componentDidMount = () => {\r\n    // let data = {\r\n    //   id: \"\",\r\n    // };\r\n    // fetch(\"http://localhost:3001/download\", {\r\n    //   method: \"post\",\r\n    //   headers: { \"Content-Type\": \"application/json\" },\r\n    //   body: JSON.stringify(data),\r\n    // })\r\n    //   .then((res) => res.json())\r\n    //   .then((json) => {\r\n    //     if (json === undefined) {\r\n    //       alert(\"오류\");\r\n    //     } else {\r\n    //       //   rows = rows.concat(createData(\"dd\", \"dd\", 126577691, 1972550));\r\n    //       //   rows = rows.concat(createData(\"dd\", \"dd\", 126577691, 1972550));\r\n    //       for (let i = 0; i < json.length; i++) {\r\n    //         if (json[i].kinds === this.props.clickmenu) {\r\n    //           rows = rows.concat(\r\n    //             createData(\r\n    //               json[i].number,\r\n    //               json[i].title,\r\n    //               json[i].writer,\r\n    //               json[i].time,\r\n    //               json[i].recomend\r\n    //             )\r\n    //           );\r\n    //         }\r\n    //       }\r\n    //       console.log(json);\r\n    //     }\r\n    //   });\r\n  };\r\n\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    console.log(\"********************************\");\r\n    if (this.props.clickmenu !== prevProps.clickmenu) {\r\n      console.log(\"업뎃?\");\r\n      this.setState({\r\n        ...this.state,\r\n        selectTagNum: -1,\r\n        contentOn: \"none\",\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setState({\r\n      page: newPage,\r\n    });\r\n  };\r\n\r\n  handleChangeRowsPerPage = (event) => {\r\n    // setRowsPerPage(+event.target.value);\r\n    this.setState({\r\n      page: 0,\r\n      rowsPerPage: +event.target.value,\r\n    });\r\n  };\r\n\r\n  test = () => {\r\n    console.log(\"test\");\r\n  };\r\n\r\n  // plusRecomend = () => {\r\n  //   let plus = this.state.recomend;\r\n  //   this.setState({\r\n  //     recomend: plus,\r\n  //   });\r\n  // };\r\n\r\n  rowclick = (row) => {\r\n    if (localStorage.getItem(\"userid\") === \"\") {\r\n      alert(\"로그인 해주세요\");\r\n    } else {\r\n      window.scrollTo(0, 0);\r\n      let data = {\r\n        number: row.number,\r\n        writer: row.writer,\r\n      };\r\n\r\n      fetch(\"/api/getContent\", {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(data),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n          if (json === undefined) {\r\n            alert(\"오류\");\r\n          } else {\r\n            this.setState(\r\n              {\r\n                content: json[0].content,\r\n                id: json[0].id,\r\n                number: json[0].number,\r\n                recomend: json[0].recomend,\r\n                time: json[0].time,\r\n                title: json[0].title,\r\n                writer: json[0].writer,\r\n                content: json[0].content,\r\n                contentOn: \"block\",\r\n              },\r\n              () => {\r\n                console.log(this.state.number);\r\n              }\r\n            );\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let data = {\r\n      //Mete2로 넘겨주는 데이터\r\n      content: this.state.content,\r\n      id: this.state.id,\r\n      number: this.state.number,\r\n      recomend: this.state.recomend,\r\n      time: this.state.time,\r\n      title: this.state.title,\r\n      writer: this.state.writer,\r\n    };\r\n\r\n    return (\r\n      <div style={{ borderTop: \"2px solid black\", marginTop: \"20px\" }}>\r\n        <div style={{ display: this.state.contentOn }}>\r\n          <BoardMete2 clickmenu={this.props.clickmenu} data={data} number={this.state.number} selectmenuFetch={this.props.selectmenuFetch} rows={this.props.rows} changeContentOn={this.changeContentOn} />\r\n        </div>\r\n\r\n        {/* 본문 */}\r\n        <Paper style={{ marginTop: \"10px\" }}>\r\n          <TableContainer>\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map((column) => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{\r\n                        minWidth: column.minWidth,\r\n                        backgroundColor: \"#eeeded\",\r\n                        // borderTop: \"1px solid black\",\r\n                      }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {this.props.rows.slice(this.state.page * this.state.rowsPerPage, this.state.page * this.state.rowsPerPage + this.state.rowsPerPage).map((row, index) => {\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      tabIndex={-1}\r\n                      key={index}\r\n                      // key={row.code}\r\n                      onClick={() => {\r\n                        this.rowclick(row);\r\n                      }}\r\n                    >\r\n                      {columns.map((column) => {\r\n                        const value = row[column.id];\r\n                        return (\r\n                          <TableCell\r\n                            // key={this.props.rows.id}\r\n                            key={column.id}\r\n                            align={column.align}\r\n                            style={{ cursor: \"pointer\" }}\r\n                          >\r\n                            {column.format && typeof value === \"number\" ? column.format(value) : value}\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            // rowsPerPageOptions={[5]}\r\n            // rowsPerPageOptions={[5, 10, 100]}\r\n            rowsPerPageOptions={[12]}\r\n            component=\"div\"\r\n            count={this.props.rows.length}\r\n            rowsPerPage={this.state.rowsPerPage}\r\n            page={this.state.page}\r\n            onChangePage={this.handleChangePage}\r\n            onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport \"./boardwrite.css\";\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     \"& > *\": {\r\n//       margin: theme.spacing(1),\r\n//       width: \"25ch\",\r\n//     },\r\n//   },\r\n// }));\r\n\r\nclass Boardwrite extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      number: 1,\r\n      title: \"\",\r\n      writer: \"\",\r\n      time: \"\",\r\n      visit: 12,\r\n      content: \"\",\r\n      userid: localStorage.getItem(\"userid\"),\r\n    };\r\n  }\r\n\r\n  // componentDidUpdate = (prevProps, prevState) => {\r\n  //   if (\r\n  //     this.props.number !== prevProps.number ||\r\n  //     this.props.submintTF !== prevProps.submintTF\r\n  //   ) {\r\n  //     this.setState(\r\n  //       {\r\n  //         ...this.state,\r\n  //         selectTagNum: -1,\r\n  //       },\r\n  //       () => {\r\n  //         this.fetchFunction();\r\n  //       }\r\n  //     );\r\n  //   }\r\n  // };\r\n\r\n  componentDidMount = () => {\r\n    if (localStorage.getItem(\"userid\") != \"\") {\r\n      let data = {\r\n        id: localStorage.getItem(\"userid\"),\r\n      };\r\n      //usernickname가져옴\r\n      fetch(\"/api/getUser\", {\r\n        method: \"post\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(data),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n          if (json === undefined) {\r\n            alert(\"오류\");\r\n          } else {\r\n            this.setState({\r\n              writer: json[0].user_nick,\r\n            });\r\n            //   console.log(json[0].user_nick);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value, // 변화가 있을때마다 state값을 초기화\r\n    });\r\n    console.log(this.state.title);\r\n    console.log(this.state.content);\r\n    console.log(this.props.clickmenu);\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    //유저정보 가져옴\r\n    let data = {\r\n      id: localStorage.getItem(\"userid\"),\r\n    };\r\n    //usernickname가져옴\r\n    fetch(\"/api/getUser\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        if (json === undefined) {\r\n          alert(\"오류\");\r\n        } else {\r\n          this.setState(\r\n            {\r\n              writer: json[0].user_nick,\r\n            },\r\n            () => {\r\n              //유저 닉네임가져오고 업로드\r\n              //시간 객체\r\n              let today = new Date();\r\n              let time = {\r\n                year: today.getFullYear(),\r\n                month: today.getMonth() + 1,\r\n                date: today.getDate(),\r\n                hours: today.getHours(),\r\n                minutes: today.getMinutes(),\r\n              };\r\n\r\n              let timestring = `${time.year}/${time.month}/${time.date} ${time.hours}:${time.minutes}`;\r\n              console.log(timestring);\r\n              // 전달 할 거\r\n\r\n              let data = {\r\n                title: this.state.title,\r\n                content: this.state.content,\r\n                writer: this.state.writer,\r\n                time: timestring,\r\n                userid: this.state.userid,\r\n                clickmenu: this.props.clickmenu,\r\n              };\r\n\r\n              if (this.state.title == \"\" || this.state.content == \"\") {\r\n                // 내용을 안썼으면 alert발동\r\n                alert(\"제목이나 내용을 입력해 주세요\");\r\n              } else if (data.content.length >= 2000) {\r\n                //내용 입력값의 길이가 200자가 넘어가면 alert발동\r\n                alert(\"2000자를 초과 했어요\");\r\n              } else {\r\n                fetch(\"/upload\", {\r\n                  //서버의 Singo라우터를 찾아간다\r\n                  method: \"post\",\r\n                  headers: { \"Content-Type\": \"application/json\" },\r\n                  body: JSON.stringify(data), // json화 해버리기\r\n                });\r\n\r\n                alert(\"업로드 했습니다.\"); //제출 알림\r\n                // window.location.reload();\r\n                this.props.boardon();\r\n                this.props.selectmenuFetch();\r\n                // document.getElementById(\"outlined - basic\").value = \"\";\r\n                document.getElementById(\"outlined-basic\").value = \"\";\r\n                document.getElementById(\"outlined-multiline-static\").value = \"\";\r\n                // window.scrollTo(0, 0);\r\n\r\n                this.setState({\r\n                  content: \"\",\r\n                });\r\n                // setTimeout($(\"aaa\").load(window.location.href + \"aaa\"), 1000);\r\n              }\r\n            }\r\n          );\r\n        }\r\n      });\r\n  };\r\n  render() {\r\n    // const classes = useStyles();\r\n    return (\r\n      <div>\r\n        <div className=\"write_titlename\">글쓰기</div>\r\n\r\n        <div className=\"write_box\">\r\n          <div className=\"write_titlebox\">\r\n            <TextField className=\"write_title_\" id=\"outlined-basic\" label=\"제목\" variant=\"outlined\" name=\"title\" placeholder=\"제목입력\" onChange={this.onChange} />\r\n          </div>\r\n          <div className=\"write_contentbox\">\r\n            <TextField\r\n              className=\"write_content_\"\r\n              id=\"outlined-multiline-static\"\r\n              label=\"내용\"\r\n              multiline\r\n              rows={20}\r\n              // defaultValue=\"Default Value\"\r\n              variant=\"outlined\"\r\n              name=\"content\"\r\n              placeholder=\"최대 2000자까지 가능해요\"\r\n              onChange={this.onChange}\r\n            />\r\n          </div>\r\n\r\n          <button onClick={this.onSubmit} className=\"write_button\">\r\n            확인\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Boardwrite;\r\n","import React, { Component } from \"react\";\r\nimport \"./boardMain.css\";\r\nimport App from \"./app1\";\r\nimport BoardMete from \"./boardMete\";\r\nimport Boardwrite from \"./boardwrite\";\r\n// import $ from \"jquery\";\r\n// import jQuery from \"jquery\";\r\n// window.$ = window.jQuery = jQuery;\r\n\r\nclass BoardMain extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      number: 1,\r\n      title: \"\",\r\n      writer: \"hwije\",\r\n      time: \"\",\r\n      visit: 12,\r\n      content: \"\",\r\n      boardon: \"inline\",\r\n      writeon: \"none\",\r\n      // clickmenu: this.props.clickmenu,\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {};\r\n\r\n  writeon = () => {\r\n    if (localStorage.getItem(\"userid\") === \"\") {\r\n      alert(\"로그인 해주세요\");\r\n    } else {\r\n      this.setState({\r\n        boardon: \"none\",\r\n        writeon: \"inline\",\r\n      });\r\n    }\r\n  };\r\n\r\n  boardon = () => {\r\n    this.setState({\r\n      boardon: \"inline\",\r\n      writeon: \"none\",\r\n    });\r\n  };\r\n\r\n  // componentDidUpdate = (prevProps, prevState) => {\r\n  //   if (this.props.offBoardWrite !== prevProps.offBoardWrite) {\r\n  //     this.setState(\r\n  //       {\r\n  //         ...this.state,\r\n  //         selectTagNum: -1,\r\n  //         // boardon: \"none\",\r\n  //         // writeon: \"none\",\r\n  //         // number: this.props.number,\r\n  //       },\r\n  //       () => {\r\n  //         // console.log(this.state.number + \"000\");\r\n  //       }\r\n  //     );\r\n  //   }\r\n  // };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"board_all\">\r\n        <div className=\"boardmain_titlebox\">\r\n          <div className=\"boardmain_title\">{this.props.clickmenu} 게시판</div>\r\n          <div>\r\n            <button onClick={this.boardon} className=\"boardmain_boardBtn\">\r\n              게시판\r\n            </button>\r\n            <button onClick={this.writeon} className=\"boardmain_writeBtn\">\r\n              글쓰기\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div style={{ display: this.state.boardon }}>\r\n          <BoardMete\r\n            clickmenu={this.props.clickmenu}\r\n            rows={this.props.rows}\r\n            selectmenuFetch={this.props.selectmenuFetch}\r\n          />\r\n        </div>\r\n        {/* <div className=\"board_main_blank\"></div> */}\r\n        {/* <App /> */}\r\n        <div style={{ display: this.state.writeon }}>\r\n          <Boardwrite\r\n            clickmenu={this.props.clickmenu}\r\n            selectmenuFetch={this.props.selectmenuFetch}\r\n            boardon={this.boardon}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BoardMain;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n// import \"../board/boardMete.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n// import \"../main/main.css\";\r\nimport \"./login_page.css\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n      pw: \"\",\r\n      button_name: \"로그인\",\r\n      button_backColor: \"white\",\r\n      loginOn: false,\r\n    };\r\n  }\r\n\r\n  login = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (this.state.loginOn === false) {\r\n      const box = {\r\n        id: this.state.id,\r\n        pw: this.state.pw,\r\n      };\r\n      fetch(\"/api/login\", {\r\n        method: \"post\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(box),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n          if (json.boolean === false) {\r\n            alert(\"아이디 또는 비밀번호가 틀렸어요\");\r\n          } else {\r\n            alert(\"로그인 성공\");\r\n            localStorage.setItem(\"userid\", json.id);\r\n            localStorage.setItem(\"usernick\", json.nick);\r\n\r\n            console.log(localStorage.getItem(\"userid\"));\r\n            console.log(localStorage.getItem(\"usernick\"));\r\n\r\n            this.handleClose();\r\n            this.setState({\r\n              button_name: \"로그아웃\",\r\n              button_backColor: \"#ececec\",\r\n              loginOn: true,\r\n            });\r\n            // window.localStorage.setItem(\"user\", JSON.stringify(json));\r\n            //   window.location.replace(\"/Main\");\r\n          }\r\n        });\r\n    } else {\r\n      //   this.setState({\r\n      //     button_name: \"로그인\",\r\n      //     button_backColor: \"white\",\r\n      //     loginOn: false,\r\n      //   });\r\n      //   localStorage.setItem(\"userid\", \"아니야\");\r\n      //   localStorage.setItem(\"usernick\", \"아니야\");\r\n      //   console.log(localStorage.getItem(\"userid\"));\r\n      //   console.log(localStorage.getItem(\"usernick\"));\r\n    }\r\n  };\r\n\r\n  idinput = (e) => {\r\n    //id인풋시 초기화\r\n    this.setState({\r\n      id: e.target.value,\r\n    });\r\n    console.log(this.state.id);\r\n  };\r\n\r\n  pwinput = (e) => {\r\n    //id인풋시 초기화\r\n    this.setState({\r\n      pw: e.target.value,\r\n    });\r\n    console.log(this.state.pw);\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false,\r\n    });\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    if (this.state.loginOn === true) {\r\n      //로그인되있음\r\n      this.setState({\r\n        button_name: \"로그인\",\r\n        button_backColor: \"white\",\r\n        loginOn: false,\r\n      });\r\n      localStorage.setItem(\"userid\", \"\");\r\n      localStorage.setItem(\"usernick\", \"\");\r\n      alert(\"로그아웃 되었습니다.\");\r\n    } else {\r\n      //로그인 안되있음\r\n      this.setState({\r\n        open: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button\r\n          // variant=\"outlined\"\r\n          // color=\"primary\"\r\n          onClick={this.handleClickOpen}\r\n          className=\"main_login\"\r\n          style={{ backgroundColor: this.state.button_backColor }}\r\n        >\r\n          {this.state.button_name}\r\n        </button>\r\n        <Dialog open={this.state.open} TransitionComponent={Transition} keepMounted onClose={this.handleClose} aria-labelledby=\"alert-dialog-slide-title\" aria-describedby=\"alert-dialog-slide-description\">\r\n          <div className=\"login_subtitle\">컴퓨터공학닷컴</div>\r\n          <div className=\"login_title\">\r\n            로그인\r\n            {/* <DialogTitle id=\"alert-dialog-slide-title\">{\"로그인\"}</DialogTitle> */}\r\n          </div>\r\n          <DialogContent>\r\n            <div>\r\n              {/* <div className=\"login_login_box\">\r\n                <text className=\"login_login_text\">로그인</text>\r\n              </div> */}\r\n              {/* <div className=\"login_id_box\">\r\n                <text className=\"login_id_text\">아이디</text>\r\n              </div> */}\r\n              <div className=\"login_idinput\">\r\n                {/* <input onChange={this.idinput} className=\"login_id_input\" /> */}\r\n                <TextField\r\n                  //   className=\"write_title_\"\r\n                  id=\"qq\"\r\n                  label=\"아이디 입력\"\r\n                  variant=\"outlined\"\r\n                  name=\"inputpw\"\r\n                  placeholder=\"\"\r\n                  onChange={this.idinput}\r\n                  className=\"login_idinput_\"\r\n                />\r\n              </div>\r\n              {/* <div className=\"login_pw_box\">\r\n                <text className=\"login_id_text\">비밀번호</text>\r\n              </div> */}\r\n              <div className=\"login_pwinput\">\r\n                {/* <input onChange={this.pwinput} className=\"login_id_input\" /> */}\r\n                <TextField\r\n                  //   className=\"write_title_\"\r\n                  id=\"qq\"\r\n                  label=\"비밀번호 입력\"\r\n                  variant=\"outlined\"\r\n                  name=\"inputpw\"\r\n                  placeholder=\"\"\r\n                  type=\"password\"\r\n                  onChange={this.pwinput}\r\n                  className=\"login_pwinput_\"\r\n                />\r\n              </div>\r\n\r\n              {/* <button className=\"login_enterbotton\" onClick={this.login}>\r\n                  확인\r\n                </button> */}\r\n\r\n              {/* <div className=\"login_blank\"></div> */}\r\n              {/* <div className=\"login_bottom_box\"> */}\r\n              {/* <a\r\n                  href=\"/sign\"\r\n                  className=\"login_bottom_text\"\r\n                  onClick={this.goSign}\r\n                >\r\n                  처음이신가요? 가입하세요\r\n                </a> */}\r\n              {/* </div> */}\r\n            </div>\r\n\r\n            {/* <DialogContentText id=\"alert-dialog-slide-description\">\r\n              Let Google help apps determine location. This means sending\r\n              anonymous location data to Google, even when no apps are running.\r\n            </DialogContentText> */}\r\n          </DialogContent>\r\n          {/* <DialogActions> */}\r\n          <div className=\"login_buttons\">\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              취소\r\n            </Button>\r\n            <Button onClick={this.login} color=\"primary\">\r\n              확인\r\n            </Button>\r\n          </div>\r\n          {/* </DialogActions> */}\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n// import \"../board/boardMete.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n// import \"../main/main.css\";\r\nimport \"./sign_page.css\";\r\n// import \"../login/login_page.css\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      id: \"\",\r\n      pw: \"\",\r\n      pw2: \"\",\r\n      nick: \"\",\r\n      idcheck: false,\r\n      pwcheck: false,\r\n      niccheck: false,\r\n    };\r\n  }\r\n\r\n  checkPW = (e) => {\r\n    if (this.state.pw === this.state.pw2) {\r\n      alert(\"비밀번호 일치합니다.\");\r\n      this.setState({\r\n        pwcheck: true,\r\n      });\r\n    } else {\r\n      alert(\"일치하지 않습니다.\");\r\n    }\r\n    console.log(this.state.pwcheck);\r\n  };\r\n\r\n  info_input = (e) => {\r\n    //id인풋시 초기화\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    console.log([e.target.name] + this.state[e.target.name]);\r\n  };\r\n\r\n  checkID = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(this.state.id);\r\n    const data = {\r\n      id: this.state.id,\r\n    };\r\n\r\n    fetch(\"api/checkid\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        if (json.tf === true) {\r\n          alert(\"사용가능한 ID입니다\");\r\n          this.setState({\r\n            idcheck: true,\r\n          });\r\n          console.log(this.state.idcheck);\r\n        } else {\r\n          alert(\"다른 ID를 입력해주세요\");\r\n        }\r\n      });\r\n  };\r\n  checkNICK = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log(this.state.nick);\r\n    const data = {\r\n      nick: this.state.nick,\r\n    };\r\n\r\n    fetch(\"api/checknick\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(data),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        if (json.tf === true) {\r\n          alert(\"사용가능한 닉네임입니다\");\r\n          this.setState({\r\n            niccheck: true,\r\n          });\r\n        } else {\r\n          alert(\"다른 닉네임을 입력해주세요\");\r\n        }\r\n        console.log(this.state.niccheck);\r\n      });\r\n  };\r\n\r\n  goSign = (e) => {\r\n    if (this.state.idcheck === true && this.state.niccheck === true && this.state.pwcheck === true) {\r\n      const user_info = {\r\n        id: this.state.id,\r\n        pw: this.state.pw,\r\n        pw2: this.state.pw2,\r\n        nick: this.state.nick,\r\n      };\r\n      fetch(\"/api/signup\", {\r\n        method: \"post\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(user_info),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n          if (json) {\r\n            alert(\"회원가입 성공\");\r\n            window.location.href = \"/\";\r\n          } else {\r\n            alert(\"error\");\r\n          }\r\n        });\r\n    } else {\r\n      alert(\"확인을 모두 눌러주세요\");\r\n    }\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n    console.log(this.state.inputpw);\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({\r\n      open: true,\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({\r\n      open: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button\r\n          // variant=\"outlined\"\r\n          // color=\"primary\"\r\n          onClick={this.handleClickOpen}\r\n          className=\"main_login\"\r\n          style={{}}\r\n        >\r\n          회원가입\r\n        </button>\r\n        <Dialog open={this.state.open} TransitionComponent={Transition} keepMounted onClose={this.handleClose} aria-labelledby=\"alert-dialog-slide-title\" aria-describedby=\"alert-dialog-slide-description\">\r\n          <DialogContent>\r\n            <div className=\"sign_subtitle\">컴퓨터공학닷컴</div>\r\n            <div className=\"sign_title\">\r\n              회원가입\r\n              {/* <DialogTitle id=\"alert-dialog-slide-title\">{\"로그인\"}</DialogTitle> */}\r\n            </div>\r\n\r\n            <div className=\"sign_inputbox\">\r\n              <div className=\"login_idinput\">\r\n                {/* <input onChange={this.idinput} className=\"login_id_input\" /> */}\r\n                <TextField\r\n                  //   className=\"write_title_\"\r\n                  id=\"id\"\r\n                  label=\"아이디 입력\"\r\n                  variant=\"outlined\"\r\n                  name=\"id\"\r\n                  placeholder=\"\"\r\n                  onChange={this.info_input}\r\n                  className=\"sign_input\"\r\n                />\r\n              </div>\r\n\r\n              <button className=\"sign_id_right\" onClick={this.checkID}>\r\n                확인\r\n              </button>\r\n            </div>\r\n            {/* <div className=\"sign_pw_box\">\r\n              <text className=\"sign_id_text\">비밀번호</text>\r\n            </div> */}\r\n            <div className=\"sign_inputbox\">\r\n              <TextField\r\n                //   className=\"write_title_\"\r\n                id=\"pw\"\r\n                label=\"비밀번호 입력\"\r\n                variant=\"outlined\"\r\n                name=\"pw\"\r\n                placeholder=\"\"\r\n                type=\"password\"\r\n                onChange={this.info_input}\r\n                className=\"sign_input\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"sign_inputbox\">\r\n              <TextField\r\n                //   className=\"write_title_\"\r\n                id=\"pw2\"\r\n                label=\"비밀번호 확인\"\r\n                variant=\"outlined\"\r\n                name=\"pw2\"\r\n                placeholder=\"\"\r\n                type=\"password\"\r\n                onChange={this.info_input}\r\n                className=\"sign_input\"\r\n              />\r\n              <button className=\"sign_id_right\" onClick={this.checkPW}>\r\n                확인\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"sign_inputbox\">\r\n              <TextField\r\n                id=\"nick\"\r\n                label=\"닉네임 입력\"\r\n                variant=\"outlined\"\r\n                name=\"nick\"\r\n                placeholder=\"\"\r\n                // type=\"password\"\r\n                onChange={this.info_input}\r\n                className=\"sign_input\"\r\n              />\r\n              <button className=\"sign_id_right\" onClick={this.checkNICK}>\r\n                확인\r\n              </button>\r\n            </div>\r\n          </DialogContent>\r\n          <div className=\"sign_buttons\">\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              취소\r\n            </Button>\r\n            <Button onClick={this.goSign} color=\"primary\">\r\n              가입\r\n            </Button>\r\n          </div>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport Iframe from \"react-iframe\";\r\n\r\nclass Ifram extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nowiframe: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    if (this.props.clickifram !== prevProps.clickifram) {\r\n      this.setState(\r\n        {\r\n          ...this.state,\r\n          selectTagNum: -1,\r\n          //   nowiframe: this.props.clickifram,\r\n        },\r\n        () => {\r\n          if (this.props.clickifram === \"전자신문\") {\r\n            this.setState({\r\n              nowiframe: \"https://www.etnews.com/\",\r\n            });\r\n          } else if (this.props.clickifram === \"ZDnet\") {\r\n            this.setState({\r\n              nowiframe: \"https://zdnet.co.kr/news/?lstcode=0000\",\r\n            });\r\n          } else if (this.props.clickifram === \"블로터\") {\r\n            this.setState({\r\n              nowiframe: \"http://www.bloter.net/\",\r\n            });\r\n          } else if (this.props.clickifram === \"씨넷코리아\") {\r\n            this.setState({\r\n              nowiframe: \"https://www.cnet.co.kr/\",\r\n            });\r\n          } else if (this.props.clickifram === \"IT World\") {\r\n            this.setState({\r\n              nowiframe: \"https://www.itworld.co.kr/main/\",\r\n            });\r\n          } else if (this.props.clickifram === \"디지털데일리\") {\r\n            this.setState({\r\n              nowiframe: \"http://www.ddaily.co.kr/\",\r\n            });\r\n          } else if (this.props.clickifram === \"얼리어답터\") {\r\n            this.setState({\r\n              nowiframe: \"https://www.eanews.kr/\",\r\n            });\r\n          } else if (this.props.clickifram === \"IT조선\") {\r\n            this.setState({\r\n              nowiframe: \"http://it.chosun.com/\",\r\n            });\r\n          } else if (this.props.clickifram === \"IT뉴스\") {\r\n            this.setState({\r\n              nowiframe: \"http://www.itnews.or.kr/\",\r\n            });\r\n          } else if (this.props.clickifram === \"IT DALY\") {\r\n            this.setState({\r\n              nowiframe: \"https://www.itdaily.kr/\",\r\n            });\r\n          } else if (this.props.clickifram === \"PC사랑\") {\r\n            this.setState({\r\n              nowiframe: \"https://www.ilovepc.co.kr/\",\r\n            });\r\n          } else if (this.props.clickifram === \"로켓펀치\") {\r\n            this.setState({\r\n              nowiframe: \"https://www.rocketpunch.com/jobs\",\r\n            });\r\n          } else if (this.props.clickifram === \"원티드\") {\r\n            this.setState({\r\n              nowiframe: \"https://www.wanted.co.kr/newintro\",\r\n            });\r\n          } else if (this.props.clickifram === \"프로그래머스\") {\r\n            this.setState({\r\n              nowiframe:\r\n                \"https://programmers.co.kr/?utm_source=google&utm_medium=cpc&utm_campaign=coding_test&gclid=Cj0KCQiA1KiBBhCcARIsAPWqoSrx2jI2-SSiCiPQLZB2zB4UkKGIWKZDRQpoqyCsDUvQk8zfjbttGjUaAtfiEALw_wcB\",\r\n            });\r\n          } else if (this.props.clickifram === \"사람인\") {\r\n            this.setState({\r\n              nowiframe:\r\n                \"https://www.saramin.co.kr/zf_user/jobs/list/job-category?cat_bcd=4\",\r\n            });\r\n          } else if (this.props.clickifram === \"잡코리아\") {\r\n            this.setState({\r\n              nowiframe:\r\n                \"https://www.jobkorea.co.kr/recruit/joblist?menucode=duty&dutyCtgr=10016\",\r\n            });\r\n          } else if (this.props.clickifram === \"와글\") {\r\n            this.setState({\r\n              nowiframe:\r\n                \"http://portal.changwon.ac.kr/portalMain/mainSub.do?homecd=portal&bno=1293\",\r\n            });\r\n          } else {\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ width: \"100%\" }}>\r\n        <Iframe\r\n          url={this.state.nowiframe}\r\n          width=\"100%\"\r\n          height=\"1700\"\r\n          id=\"myId\"\r\n          //   className=\"myClassname\"\r\n          display=\"initial\"\r\n          position=\"relative\"\r\n          //   type=\"text/html\"\r\n          type=\"text/javascript\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Ifram;\r\n","import React, { Component } from \"react\";\r\nimport \"./message.css\";\r\n\r\nexport default class Allview extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Allview_main\">\r\n        <div className=\"Allview_name\">{this.props.nickname}</div>\r\n        <div className=\"Allview_body\">\r\n          <span> {this.props.message}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./message.css\";\r\n\r\nexport default class Allview2 extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Allview_main2\">\r\n        <div className=\"Allview_name\">{this.props.nickname}</div>\r\n        <div className=\"Allview_body2\">\r\n          <span> {this.props.message}</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, input } from \"react\";\r\nimport \"./message.css\";\r\nimport ScrollToBottom from \"react-scroll-to-bottom\";\r\nimport { Socket } from \"socket.io-client\";\r\nimport io from \"socket.io-client\";\r\nimport Allview from \"./allview\";\r\nimport Allview2 from \"./allview2\";\r\n\r\nconst socket = io();\r\n\r\nclass message extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      nickname: localStorage.getItem(\"usernick\"),\r\n      message: \"\",\r\n      messages: [],\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    fetch(\"/api/allmatchGetMessage\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        json.map((row) => {\r\n          let newrow = {\r\n            nickname: row.nickname,\r\n            message: row.message,\r\n          };\r\n          this.setState({\r\n            messages: [...this.state.messages, newrow],\r\n          });\r\n        });\r\n        console.log(this.state.messages);\r\n      });\r\n    // socket.emit(\"roomjoin\", \"hwi\");\r\n    // socket.on(\"heejewake\", (massage) => {\r\n    //   alert(massage);\r\n    // });\r\n\r\n    // socket.on(\"recieveallmessage\", function (box) {\r\n    //   console.log(box);\r\n\r\n    //   this.setState({\r\n    //     messages: this.state.messages.concat(box),\r\n    //   });\r\n    // });\r\n\r\n    socket.on(\"recieveallmessage\", (box) => {\r\n      console.log(box);\r\n      this.setState({\r\n        messages: [...this.state.messages, box],\r\n      });\r\n    });\r\n    console.log(this.state.messages);\r\n  }\r\n\r\n  onchage = (e) => {\r\n    this.setState({\r\n      message: e.target.value,\r\n    });\r\n    console.log(this.state.message);\r\n  };\r\n\r\n  sendClick = () => {\r\n    console.log(\"전송클릭\");\r\n\r\n    const box = {\r\n      nickname: localStorage.getItem(\"usernick\"),\r\n      message: this.state.message,\r\n    };\r\n    socket.emit(\"send allmessage\", box);\r\n    this.setState({\r\n      message: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"chatBox\">\r\n          <div className=\"chatRbox\">\r\n            <div className=\"chatTitleBox\">\r\n              <span>실시간 채팅</span>\r\n            </div>\r\n            <div>\r\n              <ScrollToBottom className=\"chatBody\">\r\n                {this.state.messages.map((message) => {\r\n                  if (message.nickname === localStorage.getItem(\"usernick\")) {\r\n                    return <Allview nickname={message.nickname} message={message.message} />;\r\n                  } else {\r\n                    return <Allview2 nickname={message.nickname} message={message.message} />;\r\n                  }\r\n                })}\r\n                {/* {this.state.messages.map((message) => {\r\n                  return (\r\n                    <Allview\r\n                      nickname={message.nickname}\r\n                      message={message.message}\r\n                    />\r\n                  );\r\n                })} */}\r\n              </ScrollToBottom>\r\n            </div>\r\n\r\n            <div className=\"chatInputBox\">\r\n              <input className=\"messageInput\" name=\"message\" onChange={this.onchage} />\r\n              <button onClick={this.sendClick}>전송</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default message;\r\n","import React, { Component, img, webview } from \"react\";\r\nimport \"./main.css\";\r\nimport BoardMain from \"../board/boardMain\";\r\n// import { nodeName } from \"jquery\";\r\nimport counseling from \"./counseling.png\";\r\n\r\nimport Login from \"../login/login\";\r\nimport Sign from \"../sign/sign\";\r\nimport Iframe from \"../ifram/ifram\";\r\n// import Allmessage from \"../chatt/chatt\";\r\nimport Message from \"../message/message\";\r\n\r\nfunction createData(number, title, writer, date, recomend) {\r\n  //   const density = population / size;\r\n  return { number, title, writer, date, recomend };\r\n}\r\n\r\n// let rows = [];\r\n// const WebView = require(\"react-electron-web-view\");\r\nlet clickmenu;\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      Ldisplay: \"flex\",\r\n      Sdisplay: \"none\",\r\n      Idisplay: \"none\",\r\n      Cdisplay: \"none\",\r\n      Lcolor: \"#a868df\",\r\n      Scolor: \"#6f00cc\",\r\n      Icolor: \"#6f00cc\",\r\n      ccolor: \"#6f00cc\",\r\n      clickmenu: \"\",\r\n      clickifram: \"\",\r\n      // offBoardWrite: \"\",\r\n      // boardon: \"none\",\r\n      iframOn: \"none\",\r\n      rows: [],\r\n    };\r\n  }\r\n\r\n  componentDidUpdate = () => {\r\n    // if (this.webview) {\r\n    //   this.webview.loadUrl(url, {\r\n    //     extraHeaders: \"\",\r\n    //   });\r\n    // }\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    localStorage.setItem(\"userid\", \"\");\r\n    localStorage.setItem(\"usernick\", \"\");\r\n  };\r\n\r\n  menuOnmouse0 = (e) => {\r\n    this.setState({\r\n      menuSelect: 0,\r\n      Ldisplay: \"flex\",\r\n      Sdisplay: \"none\",\r\n      Idisplay: \"none\",\r\n      Cdisplay: \"none\",\r\n      Lcolor: \"#a868df\",\r\n      Scolor: \"#6f00cc\",\r\n      Icolor: \"#6f00cc\",\r\n      ccolor: \"#6f00cc\",\r\n    });\r\n  };\r\n\r\n  menuOnmouse1 = (e) => {\r\n    this.setState({\r\n      menuSelect: 1,\r\n      Ldisplay: \"none\",\r\n      Sdisplay: \"flex\",\r\n      Idisplay: \"none\",\r\n      Cdisplay: \"none\",\r\n      Lcolor: \"#6f00cc\",\r\n      Scolor: \"#a868df\",\r\n      Icolor: \"#6f00cc\",\r\n      ccolor: \"#6f00cc\",\r\n    });\r\n  };\r\n\r\n  menuOnmouse2 = (e) => {\r\n    this.setState({\r\n      menuSelect: 2,\r\n      Ldisplay: \"none\",\r\n      Sdisplay: \"none\",\r\n      Idisplay: \"flex\",\r\n      Cdisplay: \"none\",\r\n      Lcolor: \"#6f00cc\",\r\n      Scolor: \"#6f00cc\",\r\n      Icolor: \"#a868df\",\r\n      ccolor: \"#6f00cc\",\r\n    });\r\n  };\r\n\r\n  menuOnmouse3 = (e) => {\r\n    this.setState({\r\n      menuSelect: 3,\r\n      Ldisplay: \"none\",\r\n      Sdisplay: \"none\",\r\n      Idisplay: \"none\",\r\n      Cdisplay: \"flex\",\r\n      Lcolor: \"#6f00cc\",\r\n      Scolor: \"#6f00cc\",\r\n      Icolor: \"#6f00cc\",\r\n      ccolor: \"#a868df\",\r\n      kinds: \"\",\r\n    });\r\n  };\r\n\r\n  selectmenuFetch = () => {\r\n    // rows = [];\r\n    console.log(\"패치진입\");\r\n    this.setState(\r\n      {\r\n        rows: [],\r\n      },\r\n      () => {\r\n        let data = {\r\n          id: \"\",\r\n          clickmenu: this.state.clickmenu,\r\n        };\r\n        fetch(\"http://localhost:3001/download\", {\r\n          method: \"post\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(data),\r\n        })\r\n          .then((res) => res.json())\r\n          .then((json) => {\r\n            if (json === undefined) {\r\n              alert(\"오류\");\r\n            } else {\r\n              //   rows = rows.concat(createData(\"dd\", \"dd\", 126577691, 1972550));\r\n              //   rows = rows.concat(createData(\"dd\", \"dd\", 126577691, 1972550));\r\n              for (let i = 0; i < json.length; i++) {\r\n                // console.log(json.length);\r\n                this.setState({\r\n                  rows: this.state.rows.concat(\r\n                    createData(\r\n                      json[i].number,\r\n                      json[i].title,\r\n                      json[i].writer,\r\n                      json[i].time,\r\n                      json[i].recomend\r\n                    )\r\n                  ),\r\n                });\r\n              }\r\n\r\n              console.log(json);\r\n            }\r\n          });\r\n\r\n        // console.log(this.state.rows);\r\n      }\r\n    );\r\n  };\r\n\r\n  selectmenu = (e) => {\r\n    if (localStorage.getItem(\"userid\") === \"\") {\r\n      alert(\"로그인 해주세요\");\r\n    } else {\r\n      this.setState(\r\n        {\r\n          clickmenu: e.target.value, // 변화가 있을때마다 state값을 초기화\r\n          boardon: \"inline\",\r\n          iframOn: \"none\",\r\n        },\r\n        () => {\r\n          this.selectmenuFetch();\r\n        }\r\n      );\r\n    }\r\n\r\n    console.log(this.state.clickmenu);\r\n    // console.log(this.state.content);\r\n\r\n    // rows = [];\r\n  };\r\n\r\n  clickIfram = (e) => {\r\n    this.setState(\r\n      {\r\n        clickifram: e.target.value, // 변화가 있을때마다 state값을 초기화\r\n        boardon: \"none\",\r\n        iframOn: \"block\",\r\n      },\r\n      () => {\r\n        // console.log(this.state.clickifram);\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"main_top\">\r\n          <div className=\"main_toptitle\">\r\n            <img\r\n              src={counseling}\r\n              width=\"50\"\r\n              height=\"50\"\r\n              style={{ marginLeft: 20 }}\r\n            />\r\n            <div\r\n              style={{\r\n                display: \"inline\",\r\n                marginTop: 10,\r\n              }}\r\n            >\r\n              &nbsp;컴퓨터공학닷컴\r\n            </div>\r\n\r\n            {/* <text className=\"main_topsubtitle\">&nbsp;&nbsp;개발자 꿈나무</text> */}\r\n          </div>\r\n          <div className=\"main_loginbox\">\r\n            <span>\r\n              <Login />\r\n            </span>\r\n\r\n            {/* <button className=\"main_login\">로그인</button> */}\r\n            <Sign />\r\n            {/* <button className=\"main_login\">회원가입</button> */}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"main_middlemenubox\">\r\n          <div className=\"main_middlemenuboxinbox\">\r\n            <div\r\n              className=\"main_middlemenu\"\r\n              onMouseOver={this.menuOnmouse0}\r\n              style={{ backgroundColor: this.state.Lcolor }}\r\n            >\r\n              Languege\r\n            </div>\r\n            <div\r\n              className=\"main_middlemenu\"\r\n              onMouseOver={this.menuOnmouse1}\r\n              style={{ backgroundColor: this.state.Scolor }}\r\n            >\r\n              Subject\r\n            </div>\r\n            {/* <div\r\n              className=\"main_middlemenu\"\r\n              onMouseOver={this.menuOnmouse2}\r\n              style={{ backgroundColor: this.state.Icolor }}\r\n            >\r\n              IT News\r\n            </div> */}\r\n            {/* <div\r\n              className=\"main_middlemenu\"\r\n              onMouseOver={this.menuOnmouse3}\r\n              style={{ backgroundColor: this.state.ccolor }}\r\n            >\r\n              취업\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"main_middlemenubox2\">\r\n          {/* ---------랭귀지--------- */}\r\n          <div\r\n            className=\"main_middlemenuboxinbox2\"\r\n            style={{ display: this.state.Ldisplay }}\r\n          >\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.selectmenu}\r\n              value=\"C\"\r\n            >\r\n              c\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              name=\"java\"\r\n              onClick={this.selectmenu}\r\n              value=\"Java\"\r\n            >\r\n              java\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.selectmenu}\r\n              value=\"Python\"\r\n            >\r\n              python\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.selectmenu}\r\n              value=\"C++\"\r\n            >\r\n              c++\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.selectmenu}\r\n              value=\"Javascript\"\r\n            >\r\n              javascript\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.selectmenu}\r\n              value=\"C#\"\r\n            >\r\n              c#\r\n            </button>\r\n\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.selectmenu}\r\n              value=\"Php\"\r\n            >\r\n              php\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.selectmenu}\r\n              value=\"SQL\"\r\n            >\r\n              sql\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.selectmenu}\r\n              value=\"Ruby\"\r\n            >\r\n              Ruby\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.selectmenu}\r\n              value=\"Go\"\r\n            >\r\n              Go\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.selectmenu}\r\n              value=\"Swift\"\r\n            >\r\n              Swift\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.selectmenu}\r\n              value=\"Cotlin\"\r\n            >\r\n              Cotlin\r\n            </button>\r\n          </div>\r\n\r\n          {/* ----------과목-------- */}\r\n          <div\r\n            className=\"main_middlemenuboxinbox2\"\r\n            style={{ display: this.state.Sdisplay }}\r\n          >\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.selectmenu}\r\n              value=\"SE공학\"\r\n            >\r\n              소프트웨어<br></br>공학\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.selectmenu}\r\n              value=\"자료구조\"\r\n            >\r\n              자료구조\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.selectmenu}\r\n              value=\"운영체제\"\r\n            >\r\n              운영체제\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.selectmenu}\r\n              value=\"데이터통신\"\r\n            >\r\n              데이터통신\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.selectmenu}\r\n              value=\"컴퓨터구조\"\r\n            >\r\n              컴퓨터구조\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.selectmenu}\r\n              value=\"컴퓨터개론\"\r\n            >\r\n              컴퓨터개론\r\n            </button>\r\n\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.selectmenu}\r\n              value=\"프로그래밍언어\"\r\n            >\r\n              프로그래밍<br></br>언어\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.selectmenu}\r\n              value=\"논리회로설계\"\r\n            >\r\n              논리회로설계\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.selectmenu}\r\n              value=\"모바일프로그래밍\"\r\n            >\r\n              모바일<br></br>프로그래밍\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.selectmenu}\r\n              value=\"컴퓨터그래픽스\"\r\n            >\r\n              컴퓨터<br></br>그래픽스\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.selectmenu}\r\n              value=\"컴퓨터보안\"\r\n            >\r\n              컴퓨터보안\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.selectmenu}\r\n              value=\"공업수학\"\r\n            >\r\n              공업/<br></br>이산수학\r\n            </button>\r\n          </div>\r\n\r\n          {/* ------------------ */}\r\n          <div\r\n            className=\"main_middlemenuboxinbox2\"\r\n            style={{ display: this.state.Idisplay }}\r\n          >\r\n            {/* <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.clickIfram}\r\n              value=\"전자신문\"\r\n            >\r\n              전자신문\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.clickIfram}\r\n              value=\"ZDnet\"\r\n            >\r\n              ZDnet\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.clickIfram}\r\n              value=\"블로터\"\r\n            >\r\n              블로터\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.clickIfram}\r\n              value=\"씨넷코리아\"\r\n            >\r\n              씨넷코리아\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.clickIfram}\r\n              value=\"IT World\"\r\n            >\r\n              IT World\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.clickIfram}\r\n              value=\"디지털데일리\"\r\n            >\r\n              디지털데일리\r\n            </button>\r\n\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.clickIfram}\r\n              value=\"얼리어답터\"\r\n            >\r\n              얼리어답터\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.clickIfram}\r\n              value=\"IT조선\"\r\n            >\r\n              IT조선\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.clickIfram}\r\n              value=\"IT뉴스\"\r\n            >\r\n              IT뉴스\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.clickIfram}\r\n              value=\"IT DALY\"\r\n            >\r\n              IT DALY\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.clickIfram}\r\n              value=\"PC사랑\"\r\n            >\r\n              PC사랑\r\n            </button> */}\r\n          </div>\r\n\r\n          {/* ------------------ */}\r\n\r\n          <div\r\n            className=\"main_middlemenuboxinbox2\"\r\n            style={{ display: this.state.Cdisplay }}\r\n          >\r\n            {/* <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.clickIfram}\r\n              value=\"로켓펀치\"\r\n            >\r\n              로켓펀치\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.clickIfram}\r\n              value=\"원티드\"\r\n            >\r\n              원티드\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.clickIfram}\r\n              value=\"프로그래머스\"\r\n            >\r\n              프로그래머스\r\n            </button> */}\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.clickIfram}\r\n              value=\"사람인\"\r\n            >\r\n              사람인\r\n            </button>\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.clickIfram}\r\n              value=\"잡코리아\"\r\n            >\r\n              잡코리아\r\n            </button>\r\n\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.clickIfram}\r\n              value=\"와글\"\r\n            >\r\n              와글\r\n            </button>\r\n            {/* <button\r\n              className=\"main_middlemenu2\"\r\n              onClick={this.clickIfram}\r\n              value=\"잡플래닛\"\r\n            >\r\n              잡플래닛\r\n            </button> */}\r\n            <button\r\n              className=\"main_middlemenu2\"\r\n              style={{ width: 750 }}\r\n            ></button>\r\n          </div>\r\n\r\n          {/* ------------------ */}\r\n        </div>\r\n        <div className=\"main_contents\">\r\n          {/* 게시판 자리 */}\r\n          <div\r\n            className=\"main_board_content\"\r\n            style={{ display: this.state.boardon }}\r\n          >\r\n            <BoardMain\r\n              clickmenu={this.state.clickmenu}\r\n              rows={this.state.rows}\r\n              selectmenuFetch={this.selectmenuFetch}\r\n              // offBoardWrite={this.state.offBoardWrite}\r\n            ></BoardMain>\r\n          </div>\r\n\r\n          {/* 채팅 자리 */}\r\n          <div\r\n            className=\"main_chatt_content\"\r\n            style={{ display: this.state.boardon }}\r\n          >\r\n            {/* <Allmessage /> */}\r\n            <Message />\r\n          </div>\r\n\r\n          {/* <div style={{ display: this.state.iframOn, width: \"100%\" }}>\r\n            <Iframe clickifram={this.state.clickifram} />\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport io from \"socket.io-client\";\r\nconst socket = io();\r\n\r\nexport default class Socket1 extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userid: \"been\",\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    socket.emit(\"roomjoin\", this.state.userid);\r\n    // socket.on(\"heejewake\", (touserid) => {\r\n    //   alert(touserid);\r\n    // });\r\n  }\r\n  onclick = (e) => {\r\n    const str = \"hwi\";\r\n    socket.emit(\"alert\", str);\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.onclick}>알림창 보내기</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport io from \"socket.io-client\";\r\nconst socket = io();\r\n\r\nexport default class Socket2 extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userid: \"hwi\",\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    socket.emit(\"roomjoin\", this.state.userid);\r\n    socket.on(\"heejewake\", (massage) => {\r\n      alert(massage);\r\n    });\r\n  }\r\n  render() {\r\n    return <div>asdf</div>;\r\n  }\r\n}\r\n","import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Main from \"./main/main\";\r\nimport App1 from \"./board/app1\";\r\nimport Boardwrite from \"./board/boardwrite\";\r\nimport AlertDialogSlide from \"./board/deleteBoard\";\r\n\r\nimport Socket1 from \"./socket1\";\r\nimport Socket2 from \"./socket2\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Main />\r\n          </Route>\r\n\r\n          <Route exact path=\"/1\">\r\n            <Socket1 />\r\n          </Route>\r\n          <Route path=\"/2\">\r\n            <Socket2 />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/like.9f310677.png\";"],"sourceRoot":""}